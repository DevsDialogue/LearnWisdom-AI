services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: learnwisdom-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: learnwisdom
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - learnwisdomai-networks
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d learnwisdom"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: learnwisdom-redis
    restart: unless-stopped
    env_file:
      - .env
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - learnwisdomai-networks
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Prisma migration init container (FIXED)
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: learnwisdom-migrate
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/learnwisdom?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - learnwisdomai-networks
    command: ["sh", "-c", "npx prisma migrate deploy || npx prisma db push"]
    volumes:
      - ./prisma:/app/prisma
    user: root

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: learnwisdom-app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/learnwisdom?schema=public
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - learnwisdomai-networks
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./uploads:/app/uploads

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  learnwisdomai-networks:
    driver: bridge
